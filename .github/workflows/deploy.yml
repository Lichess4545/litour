on:
  workflow_call:
    inputs:
      environment:
        type: string
        default: staging
  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        options:
          - staging
          - production

env:
  apiworker: ${{ inputs.environment == 'production' && secrets.LITOUR_DEPLOY_PRODUCTION_APIWORKER || secrets.LITOUR_DEPLOY_STAGING_APIWORKER }}
  caddy: ${{ inputs.environment == 'production' && secrets.LITOUR_DEPLOY_PRODUCTION_CADDY || secrets.LITOUR_DEPLOY_STAGING_CADDY }}
  celery: ${{ inputs.environment == 'production' && secrets.LITOUR_DEPLOY_PRODUCTION_CELERY || secrets.LITOUR_DEPLOY_STAGING_CELERY }}
  migrate: ${{ inputs.environment == 'production' && secrets.LITOUR_DEPLOY_PRODUCTION_MIGRATE || secrets.LITOUR_DEPLOY_STAGING_MIGRATE }}
  web: ${{ inputs.environment == 'production' && secrets.LITOUR_DEPLOY_PRODUCTION_WEB || secrets.LITOUR_DEPLOY_STAGING_WEB }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - apiworker
          - caddy
          - celery
          - migrate
          - web
    steps:
      - name: deploy ${{ matrix.service }}
        if: github.ref == 'refs/heads/master'
        run: curl --fail -X POST ${{ env[matrix.service] }}

name: Docker Build and Test

on:
  push:
    branches: ["*"]
  pull_request:
    branches: ["*"]

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}/

jobs:
  verify:
    name: Run Tests
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate tag
        id: tag
        run: |
          if [ "${{ github.ref }}" == "refs/heads/master" ]; then
            echo "TAG=latest" >> $GITHUB_OUTPUT
          else
            # Use branch name or PR number as tag
            TAG=$(echo "${{ github.ref }}" | sed -e 's/refs\/heads\///' -e 's/refs\/pull\//pr-/' -e 's/\//-/g')
            echo "TAG=${TAG}" >> $GITHUB_OUTPUT
          fi

      - name: Build and run verification
        run: |
          TAG="${{ steps.tag.outputs.TAG }}" \
          REGISTRY="ghcr.io/${{ github.repository_owner }}" \
          docker buildx bake -f docker/docker-bake.hcl verify

  build-and-push:
    name: Build and Push Images
    runs-on: ubuntu-latest
    needs: verify
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push production images
        run: |
          TAG="latest" \
          REGISTRY="ghcr.io/${{ github.repository_owner }}" \
          docker buildx bake -f docker/docker-bake.hcl --push production
